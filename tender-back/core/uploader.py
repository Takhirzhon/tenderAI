import os
import json
import streamlit as st

UPLOAD_DIR = "../uploaded"
os.makedirs(UPLOAD_DIR, exist_ok=True)

def handle_uploaded_tender():
    st.markdown("---")
    st.subheader("üì§ –ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ –≤–ª–∞—Å–Ω—ñ —Ç–µ–Ω–¥–µ—Ä–Ω—ñ —Ñ–∞–π–ª–∏ ProZorro")

    uploaded_file = st.file_uploader("–ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ JSON –∞–±–æ PDF —Ñ–∞–π–ª", type=["json", "pdf"])

    if uploaded_file is not None:
        filename = uploaded_file.name
        file_path = os.path.join(UPLOAD_DIR, filename)

        # Save the uploaded file
        with open(file_path, "wb") as f:
            f.write(uploaded_file.read())

        st.success(f"‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —ñ –∑–±–µ—Ä–µ–∂–µ–Ω–æ —è–∫ {filename}")

        if filename.endswith(".json"):
            try:
                with open(file_path, "r", encoding="utf-8") as f:
                    data = json.load(f)
                tender_id = os.path.splitext(filename)[0]
                st.session_state.tenders_downloaded.append({
                    "id": tender_id,
                    "title": data.get("title", "–ë–µ–∑ –Ω–∞–∑–≤–∏"),
                    "date": data.get("dateModified", ""),
                    "budget": data.get("value", {}).get("amount", 0),
                    "file": filename
                })
                st.success("‚úÖ JSON —Ç–µ–Ω–¥–µ—Ä –¥–æ–¥–∞–Ω–æ –¥–æ —Å–ø–∏—Å–∫—É –∞–Ω–∞–ª—ñ–∑—É.")
            except Exception as e:
                st.error(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–æ–∑–ø–∞—Ä—Å–∏—Ç–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π JSON —Ñ–∞–π–ª: {e}")
        else:
            st.info("üìÑ PDF —Ç–µ–Ω–¥–µ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ. –ü—ñ–¥—Ç—Ä–∏–º–∫–∞ PDF –∞–Ω–∞–ª—ñ–∑—É –±—É–¥–µ –¥–æ–¥–∞–Ω–∞ –≤ –º–∞–π–±—É—Ç–Ω—å–æ–º—É.")
