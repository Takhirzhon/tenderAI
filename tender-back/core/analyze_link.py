import re
import json
import requests
import os
import anthropic
import streamlit as st

def get_claude_client():
    api_key = os.getenv("CLAUDE_API_KEY")
    if not api_key:
        st.error("‚ùå –ö–ª—é—á API Claude –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ —É —Ñ–∞–π–ª—ñ .env")
        return None
    return anthropic.Anthropic(api_key=api_key)

# Main analyzer function
def analyze_tender_from_link(link: str) -> dict:
    """
    Given a ProZorro tender URL, download its JSON and analyze the content using Claude.
    Returns extracted structured info as a dictionary.
    """
    # Extract tender ID
    match = re.search(r"(UA-\d{4}-\d{2}-\d{2}-\d{5,8}-[a-z0-9]+)", link)
    if not match:
        raise ValueError("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–æ–∑–ø—ñ–∑–Ω–∞—Ç–∏ ID —Ç–µ–Ω–¥–µ—Ä–∞ –∑ –ø–æ—Å–∏–ª–∞–Ω–Ω—è.")

    tender_id = match.group(1)
    api_url = f"https://public.api.openprocurement.org/api/2.5/tender/{tender_id}"

    try:
        response = requests.get(api_url)
        response.raise_for_status()
        tender_data = response.json()["data"]
    except Exception as e:
        raise RuntimeError(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ç–µ–Ω–¥–µ—Ä –∑ API: {e}")

    # Build tender text
    text = f"""
–ù–∞–∑–≤–∞ —Ç–µ–Ω–¥–µ—Ä—É: {tender_data.get('title', '')}
–ó–∞–º–æ–≤–Ω–∏–∫: {tender_data.get('procuringEntity', {}).get('name', '')}
–û–ø–∏—Å: {tender_data.get('description', '')}
–ú—ñ—Å—Ü–µ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó: {tender_data.get('procuringEntity', {}).get('address', {}).get('locality', '')}, {tender_data.get('procuringEntity', {}).get('address', {}).get('region', '')}
–û—á—ñ–∫—É–≤–∞–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å: {tender_data.get('value', {}).get('amount', '')} {tender_data.get('value', {}).get('currency', 'UAH')}
–ö—ñ–Ω—Ü–µ–≤–∏–π —Ç–µ—Ä–º—ñ–Ω: {tender_data.get('tenderPeriod', {}).get('endDate', '')}
"""

    # Call Claude for analysis
    client = get_claude_client()
    prompt = f"""
–í–∏ ‚Äî –¥–æ—Å–≤—ñ–¥—á–µ–Ω–∏–π –∞–Ω–∞–ª—ñ—Ç–∏–∫ –¥–µ—Ä–∂–∞–≤–Ω–∏—Ö –∑–∞–∫—É–ø—ñ–≤–µ–ª—å –≤ –£–∫—Ä–∞—ó–Ω—ñ. –ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π—Ç–µ –Ω–∞–≤–µ–¥–µ–Ω–∏–π –Ω–∏–∂—á–µ —Ç–µ–Ω–¥–µ—Ä —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é. –í–∏–∑–Ω–∞—á—Ç–µ –∫–ª—é—á–æ–≤—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —Ç–∞ –ø–æ–≤–µ—Ä–Ω—ñ—Ç—å **—Ç—ñ–ª—å–∫–∏ –≤–∞–ª—ñ–¥–Ω–∏–π JSON-–æ–±'—î–∫—Ç** –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏–º–∏ –∫–ª—é—á–∞–º–∏ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—é –º–æ–≤–æ—é:

- title (string): –ü–æ–≤–Ω–∞ –Ω–∞–∑–≤–∞ —Ç–µ–Ω–¥–µ—Ä—É.
- issuer (string): –ù–∞–∑–≤–∞ –∑–∞–º–æ–≤–Ω–∏–∫–∞ –∞–±–æ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ç–æ—Ä–∞ –∑–∞–∫—É–ø—ñ–≤–ª—ñ.
- deadline (string): –î–∞—Ç–∞ —Ç–∞ —á–∞—Å –∫—Ä–∞–π–Ω—å–æ–≥–æ —Ç–µ—Ä–º—ñ–Ω—É –ø–æ–¥–∞–Ω–Ω—è –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ–π.
- budget (string): –û—á—ñ–∫—É–≤–∞–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å –∞–±–æ –≥—Ä–∞–Ω–∏—á–Ω–∞ —Å—É–º–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É.
- location (string): –ú—ñ—Å—Ü–µ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Ä–æ–±—ñ—Ç –∞–±–æ –Ω–∞–¥–∞–Ω–Ω—è –ø–æ—Å–ª—É–≥.
- project_type (string): –¢–∏–ø –∑–∞–∫—É–ø—ñ–≤–ª—ñ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: –±—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–æ, —Ä–µ–º–æ–Ω—Ç, –Ü–¢-–ø–æ—Å–ª—É–≥–∏, –ø–æ—Å—Ç–∞—á–∞–Ω–Ω—è –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è).
- required_documents (list of strings): –£—Å—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∏, —è–∫—ñ –ø—Ä—è–º–æ –∞–±–æ –æ–ø–æ—Å–µ—Ä–µ–¥–∫–æ–≤–∞–Ω–æ –≤–∏–º–∞–≥–∞—é—Ç—å—Å—è –¥–ª—è —É—á–∞—Å—Ç—ñ –∞–±–æ –∫–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ—ó. –ù–∞–ø—Ä–∏–∫–ª–∞–¥: –≤–∏—Ç—è–≥ –∑ –Ñ–î–†, —Ç–µ–Ω–¥–µ—Ä–Ω–∞ –≥–∞—Ä–∞–Ω—Ç—ñ—è, AVK-5 –∫–æ—à—Ç–æ—Ä–∏—Å, –¥–æ–≤—ñ–¥–∫–∞ –ø—Ä–æ –¥–æ—Å–≤—ñ–¥, –¥–æ–∫—É–º–µ–Ω—Ç–∏ –Ω–∞ —Ç–µ—Ö–Ω—ñ–∫—É, –¥–µ–∫–ª–∞—Ä–∞—Ü—ñ—è –ø—Ä–æ –ø–µ—Ä—Å–æ–Ω–∞–ª. –ó–≤–µ—Ä—Ç–∞–π—Ç–µ —É–≤–∞–≥—É –Ω–∞ —Ä–æ–∑–¥—ñ–ª–∏ –∑ –Ω–∞–∑–≤–∞–º–∏ ‚Äú–ö–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ–π–Ω—ñ –≤–∏–º–æ–≥–∏‚Äù, ‚Äú–ù–µ–æ–±—Ö—ñ–¥–Ω—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∏‚Äù, ‚Äú–ü–µ—Ä–µ–ª—ñ–∫ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤‚Äù.
- avk5_required (boolean): –ß–∏ –ø—Ä—è–º–æ –≤–∫–∞–∑–∞–Ω–æ, —â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–æ–¥–∞—Ç–∏ —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —É —Ñ–æ—Ä–º–∞—Ç—ñ AVK-5 (true –∞–±–æ false).
- technical_specs (string): –£–∑–∞–≥–∞–ª—å–Ω–µ–Ω–Ω—è —Ç–µ—Ö–Ω—ñ—á–Ω–∏—Ö –≤–∏–º–æ–≥: –æ–±—Å—è–≥ —Ä–æ–±—ñ—Ç, –æ—á—ñ–∫—É–≤–∞–Ω—ñ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏, –º–∞—Ç–µ—Ä—ñ–∞–ª–∏, —Ç–µ—Ö–Ω—ñ–∫–∞. –û—Ä—ñ—î–Ω—Ç—É–π—Ç–µ—Å—å –Ω–∞ —Ä–æ–∑–¥—ñ–ª–∏ ‚Äú–¢–µ—Ö–Ω—ñ—á–Ω–∞ —Å–ø–µ—Ü–∏—Ñ—ñ–∫–∞—Ü—ñ—è‚Äù, ‚Äú–¢–µ—Ö–Ω—ñ—á–Ω–µ –∑–∞–≤–¥–∞–Ω–Ω—è‚Äù, ‚Äú–û–ø–∏—Å –ø—Ä–µ–¥–º–µ—Ç—É –∑–∞–∫—É–ø—ñ–≤–ª—ñ‚Äù.
- payment_terms (string): –£–º–æ–≤–∏ –æ–ø–ª–∞—Ç–∏ ‚Äî –∞–≤–∞–Ω—Å, –ø–æ–µ—Ç–∞–ø–Ω–∞ –æ–ø–ª–∞—Ç–∞, –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ç–æ—â–æ.
- resource_requirements (string): –Ø–∫—ñ —Ä–µ—Å—É—Ä—Å–∏ –∞–±–æ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏ –º–∞—î –Ω–∞–¥–∞—Ç–∏ —É—á–∞—Å–Ω–∏–∫: –ø–µ—Ä—Å–æ–Ω–∞–ª, —ñ–Ω–∂–µ–Ω–µ—Ä–∏, —Ç–µ—Ö–Ω—ñ–∫–∞, –º–∞—Ç–µ—Ä—ñ–∞–ª–∏, –ü–ú–ú —Ç–æ—â–æ. –ó–≤–µ—Ä—Ç–∞–π—Ç–µ —É–≤–∞–≥—É –Ω–∞ ‚Äú–û–±—Å—è–≥ —Ä–æ–±—ñ—Ç‚Äù, ‚Äú–†–µ—Å—É—Ä—Å–Ω–∞ –≤—ñ–¥–æ–º—ñ—Å—Ç—å‚Äù, ‚Äú–£–º–æ–≤–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è‚Äù.
- timeline_feasibility (string): –ö–æ—Ä–æ—Ç–∫–∞ –æ—Ü—ñ–Ω–∫–∞, —á–∏ —Ä–µ–∞–ª—ñ—Å—Ç–∏—á–Ω—ñ —Å—Ç—Ä–æ–∫–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è. –í–∞—Ä—ñ–∞–Ω—Ç–∏: ‚Äú—Ä–µ–∞–ª—ñ—Å—Ç–∏—á–Ω—ñ‚Äù, ‚Äú–æ–±–º–µ–∂–µ–Ω—ñ, –∞–ª–µ –º–æ–∂–ª–∏–≤—ñ‚Äù, ‚Äú–Ω–µ—Ä–µ–∞–ª—ñ—Å—Ç–∏—á–Ω—ñ‚Äù.
- profitability (string): –ß–∏ —î –ø—Ä–æ—î–∫—Ç –ø—Ä–∏–±—É—Ç–∫–æ–≤–∏–º –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –±—é–¥–∂–µ—Ç—É, —Ç–µ—Ö–Ω—ñ—á–Ω–∏—Ö –≤–∏–º–æ–≥ —Ç–∞ —Ä–µ—Å—É—Ä—Å—ñ–≤. –ù–∞–ø—Ä–∏–∫–ª–∞–¥: ‚Äú–ø—Ä–∏–±—É—Ç–∫–æ–≤–∏–π‚Äù, ‚Äú—Ä–∏–∑–∏–∫–æ–≤–∞–Ω–∏–π‚Äù, ‚Äú–∑–±–∏—Ç–∫–æ–≤–∏–π‚Äù ‚Äî –∑ –∫–æ—Ä–æ—Ç–∫–∏–º –ø–æ—è—Å–Ω–µ–Ω–Ω—è–º.

üìå –ù–µ –¥–æ–¥–∞–≤–∞–π—Ç–µ –ø–æ—è—Å–Ω–µ–Ω—å —á–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤. –ü–æ–≤–µ—Ä–Ω—ñ—Ç—å –ª–∏—à–µ –≤–∞–ª—ñ–¥–Ω–∏–π JSON. –Ø–∫—â–æ –¥–∞–Ω—ñ –≤—ñ–¥—Å—É—Ç–Ω—ñ ‚Äî –∑–∞–ª–∏—à–∞–π—Ç–µ –ø–æ–ª–µ –ø–æ—Ä–æ–∂–Ω—ñ–º –∞–±–æ –æ—Ü—ñ–Ω—é–π—Ç–µ –æ–±–µ—Ä–µ–∂–Ω–æ.

Tender Content:
\"\"\"{text[:15000]}\"\"\"
"""

    try:
        completion = client.messages.create( # type: ignore
            model="claude-3-5-sonnet-20241022",
            max_tokens=1024,
            temperature=0.0,
            system="–í–∏ ‚Äî –∞–Ω–∞–ª—ñ—Ç–∏–∫ –¥–µ—Ä–∂–∞–≤–Ω–∏—Ö –∑–∞–∫—É–ø—ñ–≤–µ–ª—å. –ü–æ–≤–µ—Ä–Ω—ñ—Ç—å —Ç—ñ–ª—å–∫–∏ –≤–∞–ª—ñ–¥–Ω–∏–π JSON.",
            messages=[{"role": "user", "content": prompt}]
        )

        if completion.content:
            result_text = ''.join(block.text for block in completion.content if hasattr(block, 'text')) # type: ignore
            match = re.search(r'({.*})', result_text, re.DOTALL)
            return json.loads(match.group(1)) if match else {}
    except Exception as e:
        raise RuntimeError(f"‚ùå –ü–æ–º–∏–ª–∫–∞ Claude: {e}")

    return {}
