import json
import re
import streamlit as st



def analyze_tender(text, client):
    prompt = f"""
Ви — експерт з державних закупівель в Україні. Проаналізуйте наведений нижче текст тендеру та витягніть необхідні поля. 
Поверніть **тільки валідний JSON-об'єкт** з такими ключами:

- title (string): Повна назва тендеру.
- issuer (string): Назва замовника або організатора закупівлі.
- deadline (string): Дедлайн подачі пропозицій або кінцева дата.
- budget (string): Очікувана вартість закупівлі або гранична сума контракту.
- location (string): Місце реалізації або виконання робіт.
- project_type (string): Тип проєкту (наприклад: будівництво, IT-послуги, ремонт).
- required_documents (list of strings): Укажіть **усі документи**, які вимагаються для участі або кваліфікації. Приклади: Витяг з ЄДР, гарантія тендерної пропозиції, AVK-5 кошторис, довідка про досвід, документи на техніку, декларація про персонал. Орієнтуйтесь на розділи з назвами: “Кваліфікаційні вимоги”, “Необхідні документи”, “Перелік документів”.
- avk5_required (boolean): Чи прямо зазначена вимога подати кошторис у форматі АВК-5 (true або false).
- technical_specs (string): Стисле резюме технічних вимог — що потрібно виконати, які матеріали, стандарти, обладнання. Орієнтуйтесь на розділи “Технічна специфікація”, “Технічне завдання”, “Опис предмету закупівлі”.
- payment_terms (string): Умови оплати — аванс, поетапна, після виконання, строки та порядок.
- resource_requirements (string): Укажіть, які **ресурси та матеріали** повинен надати підрядник: робітники, інженери, техніка, будматеріали, ПММ тощо. Орієнтуйтесь на розділи “Обсяг робіт”, “Вимоги до ресурсів”, “Відомість ресурсів”.
- timeline_feasibility (string): Чи виглядають строки виконання реалістичними (наприклад: “реалістичні”, “обмежені, але можливі”, “нереалістичні”).
- profitability (string): Чи виглядає участь у тендері прибутковою з урахуванням бюджету, обсягу робіт та витрат. Приклади: “прибутковий”, “ризикований”, “збитковий” — з коротким поясненням.

❗Не додавайте пояснень або коментарів — поверніть лише коректний JSON.

Tender Text:
\"\"\"{text[:15000]}\"\"\"
"""


    try:
        response = client.messages.create(
            model="claude-3-5-sonnet-20241022",
            max_tokens=1024,
            temperature=0.0,
            system = "Ви — аналітик державних закупівель. Ваше завдання — структурувати ключові параметри тендеру: документи, технічні вимоги, ресурси, рентабельність, АВК-5. Вихід має бути у вигляді валідного JSON.",
            messages=[{"role": "user", "content": prompt}]
        )
        if response.content:
            result = ''.join(block.text for block in response.content if hasattr(block, 'text'))
            try:
                return json.loads(result)
            except json.JSONDecodeError:
                match = re.search(r'({.*})', result, re.DOTALL) # type: ignore
                if match:
                    return json.loads(match.group(1))
        st.error("❌ Клод повернув недійсний JSON.")
        return {}
    except Exception as e:
        st.error(f"❌ Помилка аналізу тендеру: {e}")
        return {}
