{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/inter_5c68e7ee.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"inter_5c68e7ee-module__HvYs1G__className\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 11, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/inter_5c68e7ee.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Inter%22,%22arguments%22:[{%22subsets%22:[%22latin%22,%22cyrillic%22]}],%22variableName%22:%22inter%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Inter', 'Inter Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/tashmatov/tender-UI/app/layout.tsx"],"sourcesContent":["import type React from \"react\"\r\nimport type { Metadata } from \"next\"\r\nimport { Inter } from \"next/font/google\"\r\nimport \"./globals.css\"\r\nimport Script from \"next/script\"\r\n\r\nconst inter = Inter({ subsets: [\"latin\", \"cyrillic\"] })\r\n\r\nexport const metadata: Metadata = {\r\n  metadataBase: new URL(\"https://www.toeflassist.org\"),\r\n  title: \"Tender AI\",\r\n  description:\r\n    \"Toefl Assist предоставляет консультации по TOEFL, IELTS, GRE и GMAT. Получите профессиональную поддержку для достижения ваших целей.\",\r\n  keywords: \"TOEFL, IELTS, GRE, GMAT, консультации по экзаменам, языковые тесты, академический английский\",\r\n  openGraph: {\r\n    title: \"Toefl Assist - Профессиональные консультации по языковым тестам\",\r\n    description:\r\n      \"Получите экспертную поддержку для TOEFL, IELTS, GRE и GMAT с Toefl Assist. Индивидуальный подход к вашим целям.\",\r\n    images: [\r\n      {\r\n        url: \"https://cone.red/wp-content/themes/cone-red/assets/images/logo.svg\",\r\n        width: 1200,\r\n        height: 630,\r\n        alt: \"Toefl Assist - Консультации по языковым тестам\",\r\n      },\r\n    ],\r\n    locale: \"ru_RU\",\r\n    type: \"website\",\r\n    siteName: \"Toefl Assist\",\r\n    url: \"https://www.toeflassist.org\",\r\n  },\r\n  twitter: {\r\n    card: \"summary_large_image\",\r\n    title: \"Toefl Assist - Экспертная поддержка в языковых тестах\",\r\n    description:\r\n      \"Профессиональные консультации по TOEFL, IELTS, GRE и GMAT. Индивидуальный подход к вашим академическим целям.\",\r\n    images: [\"https://www.toeflassist.org/twitter-image.jpg\"],\r\n    creator: \"@toeflassist\",\r\n  },\r\n  alternates: {\r\n    canonical: \"https://www.toeflassist.org\",\r\n  },\r\n  robots: {\r\n    index: true,\r\n    follow: true,\r\n    googleBot: {\r\n      index: true,\r\n      follow: true,\r\n      \"max-video-preview\": -1,\r\n      \"max-image-preview\": \"large\",\r\n      \"max-snippet\": -1,\r\n    },\r\n  },\r\n  icons: {\r\n    icon: \"https://cone.red/wp-content/themes/cone-red/assets/images/logo.svg\",\r\n    apple: \"https://cone.red/wp-content/themes/cone-red/assets/images/logo.svg\",\r\n  },\r\n}\r\n\r\nexport default function RootLayout({\r\n  children,\r\n}: {\r\n  children: React.ReactNode\r\n}) {\r\n  return (\r\n    <html lang=\"ru\">\r\n      <head>\r\n        <meta name=\"yandex-verification\" content=\"7e4c878689e28e66\" />\r\n        <link rel=\"icon\" href=\"/favicon.ico\" sizes=\"any\" />\r\n        <link\r\n          rel=\"apple-touch-icon\"\r\n          sizes=\"180x180\"\r\n          href=\"https://muhammadov-q.github.io/toeflassist/apple-touch-icon.png\"\r\n        />\r\n        <link\r\n          rel=\"icon\"\r\n          type=\"image/png\"\r\n          sizes=\"32x32\"\r\n          href=\"https://muhammadov-q.github.io/toeflassist/favicon-32x32.png\"\r\n        />\r\n        <link\r\n          rel=\"icon\"\r\n          type=\"image/png\"\r\n          sizes=\"16x16\"\r\n          href=\"https://muhammadov-q.github.io/toeflassist/favicon-16x16.png\"\r\n        />\r\n        <link rel=\"manifest\" href=\"https://muhammadov-q.github.io/toeflassist/site.webmanifest\" />\r\n        <title>Tender AI</title>\r\n      </head>\r\n      <body className={inter.className}>\r\n        {/* Yandex.Metrika counter */}\r\n        <Script id=\"yandex-metrika\" strategy=\"afterInteractive\">\r\n          {`\r\n            (function(m,e,t,r,i,k,a){\r\n              m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)};\r\n              m[i].l=1*new Date();\r\n              for (var j = 0; j < document.scripts.length; j++) {\r\n                if (document.scripts[j].src === r) { return; }\r\n              }\r\n              k=e.createElement(t),a=e.getElementsByTagName(t)[0],\r\n              k.async=1,k.src=r,a.parentNode.insertBefore(k,a)\r\n            })\r\n            (window, document, \"script\", \"https://mc.yandex.ru/metrika/tag.js\", \"ym\");\r\n\r\n            ym(103090341, \"init\", {\r\n              clickmap:true,\r\n              trackLinks:true,\r\n              accurateTrackBounce:true,\r\n              webvisor:true\r\n            });\r\n          `}\r\n        </Script>\r\n        <noscript>\r\n          <div>\r\n            <img\r\n              src=\"https://mc.yandex.ru/watch/103090341\"\r\n              style={{ position: \"absolute\", left: \"-9999px\" }}\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n        </noscript>\r\n        {/* /Yandex.Metrika counter */}\r\n        {children}\r\n      </body>\r\n    </html>\r\n  )\r\n}"],"names":[],"mappings":";;;;;;AAIA;;;;;AAIO,MAAM,WAAqB;IAChC,cAAc,IAAI,IAAI;IACtB,OAAO;IACP,aACE;IACF,UAAU;IACV,WAAW;QACT,OAAO;QACP,aACE;QACF,QAAQ;YACN;gBACE,KAAK;gBACL,OAAO;gBACP,QAAQ;gBACR,KAAK;YACP;SACD;QACD,QAAQ;QACR,MAAM;QACN,UAAU;QACV,KAAK;IACP;IACA,SAAS;QACP,MAAM;QACN,OAAO;QACP,aACE;QACF,QAAQ;YAAC;SAAgD;QACzD,SAAS;IACX;IACA,YAAY;QACV,WAAW;IACb;IACA,QAAQ;QACN,OAAO;QACP,QAAQ;QACR,WAAW;YACT,OAAO;YACP,QAAQ;YACR,qBAAqB,CAAC;YACtB,qBAAqB;YACrB,eAAe,CAAC;QAClB;IACF;IACA,OAAO;QACL,MAAM;QACN,OAAO;IACT;AACF;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGT;IACC,qBACE,8OAAC;QAAK,MAAK;;0BACT,8OAAC;;kCACC,8OAAC;wBAAK,MAAK;wBAAsB,SAAQ;;;;;;kCACzC,8OAAC;wBAAK,KAAI;wBAAO,MAAK;wBAAe,OAAM;;;;;;kCAC3C,8OAAC;wBACC,KAAI;wBACJ,OAAM;wBACN,MAAK;;;;;;kCAEP,8OAAC;wBACC,KAAI;wBACJ,MAAK;wBACL,OAAM;wBACN,MAAK;;;;;;kCAEP,8OAAC;wBACC,KAAI;wBACJ,MAAK;wBACL,OAAM;wBACN,MAAK;;;;;;kCAEP,8OAAC;wBAAK,KAAI;wBAAW,MAAK;;;;;;kCAC1B,8OAAC;kCAAM;;;;;;;;;;;;0BAET,8OAAC;gBAAK,WAAW,yIAAA,CAAA,UAAK,CAAC,SAAS;;kCAE9B,8OAAC,8HAAA,CAAA,UAAM;wBAAC,IAAG;wBAAiB,UAAS;kCAClC,CAAC;;;;;;;;;;;;;;;;;;UAkBF,CAAC;;;;;;kCAEH,8OAAC;kCACC,cAAA,8OAAC;sCACC,cAAA,8OAAC;gCACC,KAAI;gCACJ,OAAO;oCAAE,UAAU;oCAAY,MAAM;gCAAU;gCAC/C,KAAI;;;;;;;;;;;;;;;;oBAKT;;;;;;;;;;;;;AAIT","debugId":null}},
    {"offset": {"line": 238, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/tashmatov/tender-UI/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-rsc']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/tashmatov/tender-UI/node_modules/next/dist/client/script.js/proxy.cjs"],"sourcesContent":["const { createClientModuleProxy } = require(\"react-server-dom-turbopack/server\");\n\n__turbopack_context__.n(createClientModuleProxy(\"[project]/node_modules/next/dist/client/script.js <module evaluation>\"));\n"],"names":[],"mappings":"AAAA,MAAM,EAAE,uBAAuB,EAAE;AAEjC,sBAAsB,CAAC,CAAC,wBAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/tashmatov/tender-UI/node_modules/next/dist/client/script.js/proxy.cjs"],"sourcesContent":["const { createClientModuleProxy } = require(\"react-server-dom-turbopack/server\");\n\n__turbopack_context__.n(createClientModuleProxy(\"[project]/node_modules/next/dist/client/script.js\"));\n"],"names":[],"mappings":"AAAA,MAAM,EAAE,uBAAuB,EAAE;AAEjC,sBAAsB,CAAC,CAAC,wBAAwB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/tashmatov/tender-UI/node_modules/next/src/client/script.tsx"],"sourcesContent":["'use client'\n\nimport ReactDOM from 'react-dom'\nimport React, { useEffect, useContext, useRef, type JSX } from 'react'\nimport type { ScriptHTMLAttributes } from 'react'\nimport { HeadManagerContext } from '../shared/lib/head-manager-context.shared-runtime'\nimport { setAttributesFromProps } from './set-attributes-from-props'\nimport { requestIdleCallback } from './request-idle-callback'\n\nconst ScriptCache = new Map()\nconst LoadCache = new Set()\n\nexport interface ScriptProps extends ScriptHTMLAttributes<HTMLScriptElement> {\n  strategy?: 'afterInteractive' | 'lazyOnload' | 'beforeInteractive' | 'worker'\n  id?: string\n  onLoad?: (e: any) => void\n  onReady?: () => void | null\n  onError?: (e: any) => void\n  children?: React.ReactNode\n  stylesheets?: string[]\n}\n\n/**\n * @deprecated Use `ScriptProps` instead.\n */\nexport type Props = ScriptProps\n\nconst insertStylesheets = (stylesheets: string[]) => {\n  // Case 1: Styles for afterInteractive/lazyOnload with appDir injected via handleClientScriptLoad\n  //\n  // Using ReactDOM.preinit to feature detect appDir and inject styles\n  // Stylesheets might have already been loaded if initialized with Script component\n  // Re-inject styles here to handle scripts loaded via handleClientScriptLoad\n  // ReactDOM.preinit handles dedup and ensures the styles are loaded only once\n  if (ReactDOM.preinit) {\n    stylesheets.forEach((stylesheet: string) => {\n      ReactDOM.preinit(stylesheet, { as: 'style' })\n    })\n\n    return\n  }\n\n  // Case 2: Styles for afterInteractive/lazyOnload with pages injected via handleClientScriptLoad\n  //\n  // We use this function to load styles when appdir is not detected\n  // TODO: Use React float APIs to load styles once available for pages dir\n  if (typeof window !== 'undefined') {\n    let head = document.head\n    stylesheets.forEach((stylesheet: string) => {\n      let link = document.createElement('link')\n\n      link.type = 'text/css'\n      link.rel = 'stylesheet'\n      link.href = stylesheet\n\n      head.appendChild(link)\n    })\n  }\n}\n\nconst loadScript = (props: ScriptProps): void => {\n  const {\n    src,\n    id,\n    onLoad = () => {},\n    onReady = null,\n    dangerouslySetInnerHTML,\n    children = '',\n    strategy = 'afterInteractive',\n    onError,\n    stylesheets,\n  } = props\n\n  const cacheKey = id || src\n\n  // Script has already loaded\n  if (cacheKey && LoadCache.has(cacheKey)) {\n    return\n  }\n\n  // Contents of this script are already loading/loaded\n  if (ScriptCache.has(src)) {\n    LoadCache.add(cacheKey)\n    // It is possible that multiple `next/script` components all have same \"src\", but has different \"onLoad\"\n    // This is to make sure the same remote script will only load once, but \"onLoad\" are executed in order\n    ScriptCache.get(src).then(onLoad, onError)\n    return\n  }\n\n  /** Execute after the script first loaded */\n  const afterLoad = () => {\n    // Run onReady for the first time after load event\n    if (onReady) {\n      onReady()\n    }\n    // add cacheKey to LoadCache when load successfully\n    LoadCache.add(cacheKey)\n  }\n\n  const el = document.createElement('script')\n\n  const loadPromise = new Promise<void>((resolve, reject) => {\n    el.addEventListener('load', function (e) {\n      resolve()\n      if (onLoad) {\n        onLoad.call(this, e)\n      }\n      afterLoad()\n    })\n    el.addEventListener('error', function (e) {\n      reject(e)\n    })\n  }).catch(function (e) {\n    if (onError) {\n      onError(e)\n    }\n  })\n\n  if (dangerouslySetInnerHTML) {\n    // Casting since lib.dom.d.ts doesn't have TrustedHTML yet.\n    el.innerHTML = (dangerouslySetInnerHTML.__html as string) || ''\n\n    afterLoad()\n  } else if (children) {\n    el.textContent =\n      typeof children === 'string'\n        ? children\n        : Array.isArray(children)\n          ? children.join('')\n          : ''\n\n    afterLoad()\n  } else if (src) {\n    el.src = src\n    // do not add cacheKey into LoadCache for remote script here\n    // cacheKey will be added to LoadCache when it is actually loaded (see loadPromise above)\n\n    ScriptCache.set(src, loadPromise)\n  }\n\n  setAttributesFromProps(el, props)\n\n  if (strategy === 'worker') {\n    el.setAttribute('type', 'text/partytown')\n  }\n\n  el.setAttribute('data-nscript', strategy)\n\n  // Load styles associated with this script\n  if (stylesheets) {\n    insertStylesheets(stylesheets)\n  }\n\n  document.body.appendChild(el)\n}\n\nexport function handleClientScriptLoad(props: ScriptProps) {\n  const { strategy = 'afterInteractive' } = props\n  if (strategy === 'lazyOnload') {\n    window.addEventListener('load', () => {\n      requestIdleCallback(() => loadScript(props))\n    })\n  } else {\n    loadScript(props)\n  }\n}\n\nfunction loadLazyScript(props: ScriptProps) {\n  if (document.readyState === 'complete') {\n    requestIdleCallback(() => loadScript(props))\n  } else {\n    window.addEventListener('load', () => {\n      requestIdleCallback(() => loadScript(props))\n    })\n  }\n}\n\nfunction addBeforeInteractiveToCache() {\n  const scripts = [\n    ...document.querySelectorAll('[data-nscript=\"beforeInteractive\"]'),\n    ...document.querySelectorAll('[data-nscript=\"beforePageRender\"]'),\n  ]\n  scripts.forEach((script) => {\n    const cacheKey = script.id || script.getAttribute('src')\n    LoadCache.add(cacheKey)\n  })\n}\n\nexport function initScriptLoader(scriptLoaderItems: ScriptProps[]) {\n  scriptLoaderItems.forEach(handleClientScriptLoad)\n  addBeforeInteractiveToCache()\n}\n\n/**\n * Load a third-party scripts in an optimized way.\n *\n * Read more: [Next.js Docs: `next/script`](https://nextjs.org/docs/app/api-reference/components/script)\n */\nfunction Script(props: ScriptProps): JSX.Element | null {\n  const {\n    id,\n    src = '',\n    onLoad = () => {},\n    onReady = null,\n    strategy = 'afterInteractive',\n    onError,\n    stylesheets,\n    ...restProps\n  } = props\n\n  // Context is available only during SSR\n  let { updateScripts, scripts, getIsSsr, appDir, nonce } =\n    useContext(HeadManagerContext)\n\n  // if a nonce is explicitly passed to the script tag, favor that over the automatic handling\n  nonce = restProps.nonce || nonce\n\n  /**\n   * - First mount:\n   *   1. The useEffect for onReady executes\n   *   2. hasOnReadyEffectCalled.current is false, but the script hasn't loaded yet (not in LoadCache)\n   *      onReady is skipped, set hasOnReadyEffectCalled.current to true\n   *   3. The useEffect for loadScript executes\n   *   4. hasLoadScriptEffectCalled.current is false, loadScript executes\n   *      Once the script is loaded, the onLoad and onReady will be called by then\n   *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n   *   5. The useEffect for onReady executes again\n   *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n   *   7. The useEffect for loadScript executes again\n   *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n   *\n   * - Second mount:\n   *   1. The useEffect for onReady executes\n   *   2. hasOnReadyEffectCalled.current is false, but the script has already loaded (found in LoadCache)\n   *      onReady is called, set hasOnReadyEffectCalled.current to true\n   *   3. The useEffect for loadScript executes\n   *   4. The script is already loaded, loadScript bails out\n   *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n   *   5. The useEffect for onReady executes again\n   *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n   *   7. The useEffect for loadScript executes again\n   *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n   */\n  const hasOnReadyEffectCalled = useRef(false)\n\n  useEffect(() => {\n    const cacheKey = id || src\n    if (!hasOnReadyEffectCalled.current) {\n      // Run onReady if script has loaded before but component is re-mounted\n      if (onReady && cacheKey && LoadCache.has(cacheKey)) {\n        onReady()\n      }\n\n      hasOnReadyEffectCalled.current = true\n    }\n  }, [onReady, id, src])\n\n  const hasLoadScriptEffectCalled = useRef(false)\n\n  useEffect(() => {\n    if (!hasLoadScriptEffectCalled.current) {\n      if (strategy === 'afterInteractive') {\n        loadScript(props)\n      } else if (strategy === 'lazyOnload') {\n        loadLazyScript(props)\n      }\n\n      hasLoadScriptEffectCalled.current = true\n    }\n  }, [props, strategy])\n\n  if (strategy === 'beforeInteractive' || strategy === 'worker') {\n    if (updateScripts) {\n      scripts[strategy] = (scripts[strategy] || []).concat([\n        {\n          id,\n          src,\n          onLoad,\n          onReady,\n          onError,\n          ...restProps,\n          nonce,\n        },\n      ])\n      updateScripts(scripts)\n    } else if (getIsSsr && getIsSsr()) {\n      // Script has already loaded during SSR\n      LoadCache.add(id || src)\n    } else if (getIsSsr && !getIsSsr()) {\n      loadScript({\n        ...props,\n        nonce,\n      })\n    }\n  }\n\n  // For the app directory, we need React Float to preload these scripts.\n  if (appDir) {\n    // Injecting stylesheets here handles beforeInteractive and worker scripts correctly\n    // For other strategies injecting here ensures correct stylesheet order\n    // ReactDOM.preinit handles loading the styles in the correct order,\n    // also ensures the stylesheet is loaded only once and in a consistent manner\n    //\n    // Case 1: Styles for beforeInteractive/worker with appDir - handled here\n    // Case 2: Styles for beforeInteractive/worker with pages dir - Not handled yet\n    // Case 3: Styles for afterInteractive/lazyOnload with appDir - handled here\n    // Case 4: Styles for afterInteractive/lazyOnload with pages dir - handled in insertStylesheets function\n    if (stylesheets) {\n      stylesheets.forEach((styleSrc) => {\n        ReactDOM.preinit(styleSrc, { as: 'style' })\n      })\n    }\n\n    // Before interactive scripts need to be loaded by Next.js' runtime instead\n    // of native <script> tags, because they no longer have `defer`.\n    if (strategy === 'beforeInteractive') {\n      if (!src) {\n        // For inlined scripts, we put the content in `children`.\n        if (restProps.dangerouslySetInnerHTML) {\n          // Casting since lib.dom.d.ts doesn't have TrustedHTML yet.\n          restProps.children = restProps.dangerouslySetInnerHTML\n            .__html as string\n          delete restProps.dangerouslySetInnerHTML\n        }\n\n        return (\n          <script\n            nonce={nonce}\n            dangerouslySetInnerHTML={{\n              __html: `(self.__next_s=self.__next_s||[]).push(${JSON.stringify([\n                0,\n                { ...restProps, id },\n              ])})`,\n            }}\n          />\n        )\n      } else {\n        // @ts-ignore\n        ReactDOM.preload(\n          src,\n          restProps.integrity\n            ? {\n                as: 'script',\n                integrity: restProps.integrity,\n                nonce,\n                crossOrigin: restProps.crossOrigin,\n              }\n            : { as: 'script', nonce, crossOrigin: restProps.crossOrigin }\n        )\n        return (\n          <script\n            nonce={nonce}\n            dangerouslySetInnerHTML={{\n              __html: `(self.__next_s=self.__next_s||[]).push(${JSON.stringify([\n                src,\n                { ...restProps, id },\n              ])})`,\n            }}\n          />\n        )\n      }\n    } else if (strategy === 'afterInteractive') {\n      if (src) {\n        // @ts-ignore\n        ReactDOM.preload(\n          src,\n          restProps.integrity\n            ? {\n                as: 'script',\n                integrity: restProps.integrity,\n                nonce,\n                crossOrigin: restProps.crossOrigin,\n              }\n            : { as: 'script', nonce, crossOrigin: restProps.crossOrigin }\n        )\n      }\n    }\n  }\n\n  return null\n}\n\nObject.defineProperty(Script, '__nextScript', { value: true })\n\nexport default Script\n"],"names":["handleClientScriptLoad","initScriptLoader","ScriptCache","Map","LoadCache","Set","insertStylesheets","stylesheets","ReactDOM","preinit","forEach","stylesheet","as","window","head","document","link","createElement","type","rel","href","appendChild","loadScript","props","src","id","onLoad","onReady","dangerouslySetInnerHTML","children","strategy","onError","cacheKey","has","add","get","then","afterLoad","el","loadPromise","Promise","resolve","reject","addEventListener","e","call","catch","innerHTML","__html","textContent","Array","isArray","join","set","setAttributesFromProps","setAttribute","body","requestIdleCallback","loadLazyScript","readyState","addBeforeInteractiveToCache","scripts","querySelectorAll","script","getAttribute","scriptLoaderItems","Script","restProps","updateScripts","getIsSsr","appDir","nonce","useContext","HeadManagerContext","hasOnReadyEffectCalled","useRef","useEffect","current","hasLoadScriptEffectCalled","concat","styleSrc","JSON","stringify","preload","integrity","crossOrigin","Object","defineProperty","value"],"mappings":"","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/tashmatov/tender-UI/node_modules/next/script.js"],"sourcesContent":["module.exports = require('./dist/client/script')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}